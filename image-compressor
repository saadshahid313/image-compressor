<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Free online tool to compress images while maintaining quality. Reduce file size for JPG, PNG, and WEBP images instantly.">
    <meta name="keywords" content="image compressor, compress images, reduce image size, online image optimizer, JPG compressor, PNG compressor">
    <title>ImageCompress Pro | Free Online Image Compression Tool</title>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-5569040093743992" crossorigin="anonymous"></script>
    <style>
        :root {
            --primary-color: #4361ee;
            --secondary-color: #3a0ca3;
            --accent-color: #7209b7;
            --light-color: #f8f9fa;
            --dark-color: #212529;
            --success-color: #4bb543;
            --warning-color: #f0ad4e;
            --error-color: #d9534f;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: #f5f7ff;
            color: var(--dark-color);
            line-height: 1.6;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        header {
            text-align: center;
            padding: 30px 0;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            border-radius: 10px;
            margin-bottom: 30px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        
        h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }
        
        .subtitle {
            font-size: 1.1rem;
            opacity: 0.9;
        }
        
        .ad-container {
            margin: 25px 0;
            padding: 15px;
            background-color: white;
            border-radius: 8px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }
        
        .tool-container {
            background-color: white;
            border-radius: 10px;
            padding: 30px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            margin-bottom: 30px;
        }
        
        .upload-area {
            border: 2px dashed #ccc;
            border-radius: 8px;
            padding: 40px 20px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-bottom: 25px;
            position: relative;
            overflow: hidden;
        }
        
        .upload-area:hover {
            border-color: var(--primary-color);
            background-color: #f8faff;
        }
        
        .upload-area.active {
            border-color: var(--primary-color);
            background-color: rgba(67, 97, 238, 0.05);
        }
        
        .upload-icon {
            font-size: 48px;
            color: var(--primary-color);
            margin-bottom: 15px;
        }
        
        .controls {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 25px;
        }
        
        .control-group {
            flex: 1;
            min-width: 250px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: var(--dark-color);
        }
        
        select, input[type="range"] {
            width: 100%;
            padding: 10px 15px;
            border: 1px solid #ddd;
            border-radius: 6px;
            background-color: white;
            font-size: 16px;
            transition: border 0.3s ease;
        }
        
        select:focus, input[type="range"]:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
        }
        
        input[type="range"] {
            -webkit-appearance: none;
            height: 8px;
            padding: 0;
            background: #ddd;
            border-radius: 4px;
        }
        
        input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 20px;
            height: 20px;
            background: var(--primary-color);
            border-radius: 50%;
            cursor: pointer;
        }
        
        .range-labels {
            display: flex;
            justify-content: space-between;
            margin-top: 5px;
            font-size: 0.9rem;
            color: #666;
        }
        
        button {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 6px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }
        
        button:hover {
            background-color: var(--secondary-color);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        
        button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        
        .button-group {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }
        
        .secondary-btn {
            background-color: white;
            color: var(--primary-color);
            border: 1px solid var(--primary-color);
        }
        
        .secondary-btn:hover {
            background-color: #f0f4ff;
        }
        
        .results {
            display: none;
            margin-top: 30px;
            animation: fadeIn 0.5s ease;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .comparison {
            display: flex;
            flex-wrap: wrap;
            gap: 30px;
            margin-bottom: 30px;
        }
        
        .image-box {
            flex: 1;
            min-width: 300px;
        }
        
        .image-container {
            border: 1px solid #eee;
            border-radius: 8px;
            padding: 10px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
            height: 300px;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }
        
        .image-container img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }
        
        .image-info {
            text-align: center;
            padding: 10px;
            background-color: white;
            border-radius: 6px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }
        
        .savings {
            background-color: var(--success-color);
            color: white;
            padding: 15px;
            border-radius: 8px;
            text-align: center;
            margin: 20px 0;
            font-weight: 600;
        }
        
        .download-btn {
            background-color: var(--success-color);
            display: block;
            width: 100%;
            text-align: center;
            margin-top: 15px;
        }
        
        .download-btn:hover {
            background-color: #3a9a33;
        }
        
        .loading {
            display: none;
            text-align: center;
            padding: 20px;
        }
        
        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-left-color: var(--primary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 15px;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        footer {
            text-align: center;
            padding: 30px 0;
            color: #666;
            font-size: 0.9rem;
        }
        
        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin: 40px 0;
        }
        
        .feature-card {
            background-color: white;
            border-radius: 8px;
            padding: 25px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s ease;
        }
        
        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
        
        .feature-icon {
            font-size: 36px;
            color: var(--primary-color);
            margin-bottom: 15px;
        }
        
        .feature-title {
            font-size: 1.2rem;
            margin-bottom: 10px;
            color: var(--dark-color);
        }
        
        @media (max-width: 768px) {
            h1 {
                font-size: 2rem;
            }
            
            .controls {
                flex-direction: column;
                gap: 15px;
            }
            
            .control-group {
                min-width: 100%;
            }
            
            .comparison {
                flex-direction: column;
            }
            
            .image-box {
                min-width: 100%;
            }
        }
        
        /* Tooltip styles */
        .tooltip {
            position: relative;
            display: inline-block;
            margin-left: 5px;
            cursor: help;
        }
        
        .tooltip .tooltiptext {
            visibility: hidden;
            width: 200px;
            background-color: #555;
            color: #fff;
            text-align: center;
            border-radius: 6px;
            padding: 5px;
            position: absolute;
            z-index: 1;
            bottom: 125%;
            left: 50%;
            margin-left: -100px;
            opacity: 0;
            transition: opacity 0.3s;
            font-size: 0.9rem;
            font-weight: normal;
        }
        
        .tooltip:hover .tooltiptext {
            visibility: visible;
            opacity: 1;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>ImageCompress Pro</h1>
            <p class="subtitle">Optimize your images for web with our powerful compression tool</p>
        </header>
        
        <!-- Top Ad Banner -->
        <div class="ad-container">
            <!-- Replace with your Google AdSense code -->
            <ins class="adsbygoogle"
                 style="display:block"
                 data-ad-client="ca-pub-YOUR_ADSENSE_ID"
                 data-ad-slot="YOUR_AD_SLOT_ID"
                 data-ad-format="auto"
                 data-full-width-responsive="true"></ins>
            <script>
                 (adsbygoogle = window.adsbygoogle || []).push({});
            </script>
        </div>
        
        <div class="tool-container">
            <div class="upload-area" id="uploadArea">
                <div class="upload-icon">📁</div>
                <h3>Drag & Drop your image here</h3>
                <p>or click to browse files (JPG, PNG, WEBP supported)</p>
                <input type="file" id="fileInput" accept="image/jpeg,image/png,image/webp" style="display: none;">
            </div>
            
            <div class="controls">
                <div class="control-group">
                    <label for="format">Output Format</label>
                    <select id="format">
                        <option value="original">Original Format</option>
                        <option value="jpeg">JPEG</option>
                        <option value="png">PNG</option>
                        <option value="webp">WebP</option>
                    </select>
                </div>
                
                <div class="control-group">
                    <label for="quality">
                        Compression Level 
                        <span class="tooltip">?
                            <span class="tooltiptext">Higher values mean better quality but larger file size</span>
                        </span>
                    </label>
                    <input type="range" id="quality" min="0" max="100" value="80">
                    <div class="range-labels">
                        <span>Smaller File</span>
                        <span>Balanced</span>
                        <span>Better Quality</span>
                    </div>
                </div>
            </div>
            
            <div class="button-group">
                <button id="compressBtn" disabled>Compress Image</button>
                <button class="secondary-btn" id="resetBtn">Reset</button>
            </div>
            
            <div class="loading" id="loading">
                <div class="spinner"></div>
                <p>Compressing your image...</p>
            </div>
            
            <div class="results" id="results">
                <div class="savings" id="savingsInfo"></div>
                
                <div class="comparison">
                    <div class="image-box">
                        <h3>Original Image</h3>
                        <div class="image-container">
                            <img id="originalImage" src="" alt="Original Image">
                        </div>
                        <div class="image-info">
                            <p id="originalSize"></p>
                            <p id="originalDimensions"></p>
                        </div>
                    </div>
                    
                    <div class="image-box">
                        <h3>Compressed Image</h3>
                        <div class="image-container">
                            <img id="compressedImage" src="" alt="Compressed Image">
                        </div>
                        <div class="image-info">
                            <p id="compressedSize"></p>
                            <p id="compressedDimensions"></p>
                            <button class="download-btn" id="downloadBtn">Download Compressed Image</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Middle Ad Banner -->
        <div class="ad-container">
            <!-- Replace with your Google AdSense code -->
            <ins class="adsbygoogle"
                 style="display:block"
                 data-ad-client="ca-pub-YOUR_ADSENSE_ID"
                 data-ad-slot="YOUR_AD_SLOT_ID_2"
                 data-ad-format="auto"
                 data-full-width-responsive="true"></ins>
            <script>
                 (adsbygoogle = window.adsbygoogle || []).push({});
            </script>
        </div>
        
        <div class="features">
            <div class="feature-card">
                <div class="feature-icon">⚡</div>
                <h3 class="feature-title">Lightning Fast</h3>
                <p>Our advanced algorithms compress images in seconds without uploading to servers, ensuring your privacy and speed.</p>
            </div>
            
            <div class="feature-card">
                <div class="feature-icon">🛡️</div>
                <h3 class="feature-title">Privacy Focused</h3>
                <p>All processing happens in your browser. Your images never leave your device, guaranteeing complete privacy.</p>
            </div>
            
            <div class="feature-card">
                <div class="feature-icon">📱</div>
                <h3 class="feature-title">Fully Responsive</h3>
                <p>Works perfectly on all devices - desktop, tablet, or mobile. Compress images anytime, anywhere.</p>
            </div>
        </div>
        
        <!-- Bottom Ad Banner -->
        <div class="ad-container">
            <!-- Replace with your Google AdSense code -->
            <ins class="adsbygoogle"
                 style="display:block"
                 data-ad-client="ca-pub-YOUR_ADSENSE_ID"
                 data-ad-slot="YOUR_AD_SLOT_ID_3"
                 data-ad-format="auto"
                 data-full-width-responsive="true"></ins>
            <script>
                 (adsbygoogle = window.adsbygoogle || []).push({});
            </script>
        </div>
        
        <footer>
            <p>© 2025 ImageCompress Pro. All rights reserved.</p>
            <p>Free online tool for compressing JPG, PNG, and WebP images.</p>
        </footer>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // DOM elements
            const uploadArea = document.getElementById('uploadArea');
            const fileInput = document.getElementById('fileInput');
            const compressBtn = document.getElementById('compressBtn');
            const resetBtn = document.getElementById('resetBtn');
            const downloadBtn = document.getElementById('downloadBtn');
            const loading = document.getElementById('loading');
            const results = document.getElementById('results');
            const savingsInfo = document.getElementById('savingsInfo');
            
            // Image elements
            const originalImage = document.getElementById('originalImage');
            const compressedImage = document.getElementById('compressedImage');
            const originalSize = document.getElementById('originalSize');
            const compressedSize = document.getElementById('compressedSize');
            const originalDimensions = document.getElementById('originalDimensions');
            const compressedDimensions = document.getElementById('compressedDimensions');
            
            // Settings
            const formatSelect = document.getElementById('format');
            const qualitySlider = document.getElementById('quality');
            
            // Variables
            let originalFile = null;
            let compressedBlob = null;
            
            // Event listeners
            uploadArea.addEventListener('click', () => fileInput.click());
            
            uploadArea.addEventListener('dragover', (e) => {
                e.preventDefault();
                uploadArea.classList.add('active');
            });
            
            uploadArea.addEventListener('dragleave', () => {
                uploadArea.classList.remove('active');
            });
            
            uploadArea.addEventListener('drop', (e) => {
                e.preventDefault();
                uploadArea.classList.remove('active');
                
                if (e.dataTransfer.files.length) {
                    handleFileSelect(e.dataTransfer.files[0]);
                }
            });
            
            fileInput.addEventListener('change', () => {
                if (fileInput.files.length) {
                    handleFileSelect(fileInput.files[0]);
                }
            });
            
            compressBtn.addEventListener('click', compressImage);
            resetBtn.addEventListener('click', resetTool);
            downloadBtn.addEventListener('click', downloadImage);
            
            // Functions
            function handleFileSelect(file) {
                // Check if file is an image
                if (!file.type.match('image.*')) {
                    alert('Please select an image file (JPG, PNG, or WEBP)');
                    return;
                }
                
                originalFile = file;
                
                // Display original image
                const reader = new FileReader();
                reader.onload = function(e) {
                    originalImage.src = e.target.result;
                    
                    // Get image dimensions
                    const img = new Image();
                    img.onload = function() {
                        originalDimensions.textContent = `${img.width} × ${img.height} pixels`;
                    };
                    img.src = e.target.result;
                    
                    // Display file size
                    originalSize.textContent = formatFileSize(file.size);
                    
                    // Enable compress button
                    compressBtn.disabled = false;
                    
                    // Show upload success
                    uploadArea.innerHTML = `
                        <div class="upload-icon">✔️</div>
                        <h3>${file.name}</h3>
                        <p>${formatFileSize(file.size)} • Ready to compress</p>
                    `;
                };
                reader.readAsDataURL(file);
            }
            
            function compressImage() {
                if (!originalFile) return;
                
                // Show loading state
                loading.style.display = 'block';
                results.style.display = 'none';
                compressBtn.disabled = true;
                
                // Get settings
                const format = formatSelect.value === 'original' ? originalFile.type.split('/')[1] : formatSelect.value;
                const quality = qualitySlider.value / 100;
                
                // Use setTimeout to allow UI to update before heavy computation
                setTimeout(() => {
                    const img = new Image();
                    img.onload = function() {
                        // Create canvas
                        const canvas = document.createElement('canvas');
                        const ctx = canvas.getContext('2d');
                        
                        // Set canvas dimensions
                        canvas.width = img.width;
                        canvas.height = img.height;
                        
                        // Draw image on canvas
                        ctx.drawImage(img, 0, 0);
                        
                        // Compress image
                        canvas.toBlob((blob) => {
                            compressedBlob = blob;
                            
                            // Display compressed image
                            const compressedUrl = URL.createObjectURL(blob);
                            compressedImage.src = compressedUrl;
                            
                            // Get compressed image dimensions
                            compressedDimensions.textContent = `${img.width} × ${img.height} pixels`;
                            
                            // Display compressed file size
                            compressedSize.textContent = formatFileSize(blob.size);
                            
                            // Calculate and display savings
                            const savings = ((originalFile.size - blob.size) / originalFile.size * 100).toFixed(1);
                            savingsInfo.textContent = `File size reduced by ${savings}% (${formatFileSize(originalFile.size)} → ${formatFileSize(blob.size)})`;
                            
                            // Hide loading and show results
                            loading.style.display = 'none';
                            results.style.display = 'block';
                            compressBtn.disabled = false;
                            
                            // Scroll to results
                            results.scrollIntoView({ behavior: 'smooth' });
                        }, `image/${format}`, quality);
                    };
                    
                    img.src = URL.createObjectURL(originalFile);
                }, 100);
            }
            
            function downloadImage() {
                if (!compressedBlob) return;
                
                const a = document.createElement('a');
                const url = URL.createObjectURL(compressedBlob);
                const extension = formatSelect.value === 'original' ? originalFile.name.split('.').pop() : formatSelect.value;
                const filename = originalFile.name.replace(/\.[^/.]+$/, '') + `_compressed.${extension}`;
                
                a.href = url;
                a.download = filename;
                document.body.appendChild(a);
                a.click();
                
                setTimeout(() => {
                    document.body.removeChild(a);
                    URL.revokeObjectURL(url);
                }, 100);
            }
            
            function resetTool() {
                // Reset file input
                fileInput.value = '';
                originalFile = null;
                compressedBlob = null;
                
                // Reset UI
                uploadArea.innerHTML = `
                    <div class="upload-icon">📁</div>
                    <h3>Drag & Drop your image here</h3>
                    <p>or click to browse files (JPG, PNG, WEBP supported)</p>
                `;
                
                originalImage.src = '';
                compressedImage.src = '';
                originalSize.textContent = '';
                compressedSize.textContent = '';
                originalDimensions.textContent = '';
                compressedDimensions.textContent = '';
                
                results.style.display = 'none';
                compressBtn.disabled = true;
                
                // Reset settings to default
                formatSelect.value = 'original';
                qualitySlider.value = 80;
            }
            
            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                
                const k = 1024;
                const sizes = ['Bytes', 'KB', 'MB', 'GB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }
        });
// Disable right-click
document.addEventListener('contextmenu', function(e) {
  e.preventDefault();
});

// Disable keyboard shortcuts for developer tools
document.addEventListener('keydown', function(e) {
  // Disable F12, Ctrl+Shift+I, Ctrl+Shift+J, Ctrl+U
  if (e.key === 'F12' || 
      (e.ctrlKey && e.shiftKey && e.key === 'I') || 
      (e.ctrlKey && e.shiftKey && e.key === 'J') || 
      (e.ctrlKey && e.key === 'U')) {
    e.preventDefault();
    alert('Developer tools are disabled for this page');
  }
});

// Additional protection against iframe busting (optional)
if (window.self !== window.top) {
  window.top.location = window.self.location;
}
    </script>
</body>
</html>
